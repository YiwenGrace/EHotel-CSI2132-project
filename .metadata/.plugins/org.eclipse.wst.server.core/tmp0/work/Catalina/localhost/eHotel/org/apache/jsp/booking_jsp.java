/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.16
 * Generated at: 2019-04-06 00:03:01 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.ArrayList;
import eHotel.entities.Room;

public final class booking_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("eHotel.entities.Room");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP 只允许 GET、POST 或 HEAD。Jasper 还允许 OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"ISO-8859-1\">\r\n");
      out.write("<title>Start Booking</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t");

		String CusName = (String) request.getAttribute("CusName");
	
      out.write("\r\n");
      out.write("\t<form method=\"post\" action=\"roombook\">\r\n");
      out.write("\t\t<h3>\r\n");
      out.write("\t\t\tWelcome,\r\n");
      out.write("\t\t\t");
      out.print(CusName);
      out.write("</h3>\r\n");
      out.write("\t\t\t<br>\r\n");
      out.write("\t\t\t\t<h4>Here are the room(s) you booked</h4>\r\n");
      out.write("\t\t\t\t<ul>\r\n");
      out.write("\t\t\t\t\t");

						Object obj1 = request.getAttribute("bookedRooms");
						ArrayList<Room> broomList = null;
						if (obj1 instanceof ArrayList) {
							broomList = (ArrayList<Room>) obj1;
						}
						if (broomList != null) {
							for (Room room : broomList) {
								String roominfo = room.getRoom_no() + "---" + room.getRoom_status();
					
      out.write("\r\n");
      out.write("\t\t\t\t\t<li>");
      out.print(roominfo);
      out.write("</li>\r\n");
      out.write("\t\t\t\t\t");

						}
						}
					
      out.write("\r\n");
      out.write("\t\t\t\t</ul>\r\n");
      out.write("\t\t\t\t<input type=\"hidden\" name=\"cusName\" value=\"");
      out.print(CusName);
      out.write("\" />\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t<h4>Start booking a new room:</h4>\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t<br>\r\n");
      out.write("\t\t\t\t<h4>Select city: </h4>\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t<select name = \"City\">\r\n");
      out.write("\t\t\t\t\t");

						Object obj2 = request.getAttribute("allCity");
						ArrayList<Room> cityList = null;
						if (obj2 instanceof ArrayList) {
							cityList = (ArrayList<Room>) obj2;
						}
						if (cityList != null) {
							for (Room city : cityList) {
								
					
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t<option>----</option>\r\n");
      out.write("\t\t\t\t\t\t<option>");
      out.print(city.getCity());
      out.write("</option>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t");

						}
						}
					
      out.write("\r\n");
      out.write("\t\t\t\t</select>\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t<br>\r\n");
      out.write("\t\t\t\t<h4>Select hotel chain: </h4>\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t<select name = \"HotelChain\">\r\n");
      out.write("\t\t\t\t\t");

						Object obj3 = request.getAttribute("allHotelChain");
						ArrayList<Room> hotelchList = null;
						if (obj3 instanceof ArrayList) {
							hotelchList = (ArrayList<Room>) obj3;
						}
						if (hotelchList != null) {
							for (Room hotelch : hotelchList) {
								
					
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t<option>----</option>\r\n");
      out.write("\t\t\t\t\t\t<option>");
      out.print(hotelch.getHotelChainAdd());
      out.write("</option>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t");

						}
						}
					
      out.write("\r\n");
      out.write("\t\t\t\t</select>\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t<br>\r\n");
      out.write("\t\t\t\t<h4>Select hotel category: </h4>\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t<select name = \"HotelCategory\">\r\n");
      out.write("\t\t\t\t\t");

						Object obj4 = request.getAttribute("allHotelCategory");
						ArrayList<Room> hotelcateList = null;
						if (obj4 instanceof ArrayList) {
							hotelcateList = (ArrayList<Room>) obj4;
						}
						if (hotelcateList != null) {
							for (Room hotelcate : hotelcateList) {
								
					
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t<option>----</option>\r\n");
      out.write("\t\t\t\t\t\t<option>");
      out.print(hotelcate.getHotelCategory());
      out.write("</option>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t");

						}
						}
					
      out.write("\r\n");
      out.write("\t\t\t\t</select>\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t<br>\r\n");
      out.write("\t\t\t\t<h4>Select hotel: </h4>\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t<select name = \"Hotel\">\r\n");
      out.write("\t\t\t\t\t");

						Object obj5 = request.getAttribute("allHotel");
						ArrayList<Room> hotelList = null;
						if (obj5 instanceof ArrayList) {
							hotelList = (ArrayList<Room>) obj5;
						}
						if (hotelList != null) {
							for (Room hotel : hotelList) {
								
					
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t<option>----</option>\r\n");
      out.write("\t\t\t\t\t\t<option>");
      out.print(hotel.getHotelAdd());
      out.write("</option>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t");

						}
						}
					
      out.write("\r\n");
      out.write("\t\t\t\t</select>\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t<br>\r\n");
      out.write("\t\t\t\t<form method=\"get\">\r\n");
      out.write("\t\t\t\t\t<label>Check in date: </label>\r\n");
      out.write("\t\t\t\t\t<input type=\"date\" id=\"checkInDate\" />\r\n");
      out.write("\t\t\t\t</form>\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t<br>\r\n");
      out.write("\t\t\t\t<form method=\"get\">\r\n");
      out.write("\t\t\t\t\t<label>Check out date: </label>\r\n");
      out.write("\t\t\t\t\t<input type=\"date\" id=\"checkOutDate\" />\r\n");
      out.write("\t\t\t\t</form>\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t<br>\r\n");
      out.write("\t\t\t\t<h4>Select number of people: </h4>\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t<select name = \"capacity\">\r\n");
      out.write("\t\t\t\t\t");

						Object obj6 = request.getAttribute("allRoomCap");
						ArrayList<Room> roomcapList = null;
						if (obj6 instanceof ArrayList) {
							roomcapList = (ArrayList<Room>) obj6;
						}
						if (roomcapList != null) {
							for (Room capacity : roomcapList) {
								
					
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t<option>----</option>\r\n");
      out.write("\t\t\t\t\t\t<option>");
      out.print(capacity.getRoomcap());
      out.write("</option>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t");

						}
						}
					
      out.write("\r\n");
      out.write("\t\t\t\t</select>\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t<br>\r\n");
      out.write("\t\t\t\t<h4>Select price range: </h4>\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t<select name = \"price\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t<option>----</option>\r\n");
      out.write("\t\t\t\t\t\t<option>less than 100</option>\r\n");
      out.write("\t\t\t\t\t\t<option>100-300</option>\r\n");
      out.write("\t\t\t\t\t\t<option>301-600</option>\r\n");
      out.write("\t\t\t\t\t\t<option>greater than 600</option>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t");

						}
						}
					
      out.write("\r\n");
      out.write("\t\t\t\t</select>\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t<br>\r\n");
      out.write("\t\t\t\t<h4>Here are avaiable rooms</h4>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t<select name = \"roomno\">\r\n");
      out.write("\t\t\t\t\t");

						Object obj = request.getAttribute("allRooms");
						ArrayList<Room> roomList = null;
						if (obj instanceof ArrayList) {
							roomList = (ArrayList<Room>) obj;
						}
						if (roomList != null) {
							for (Room room : roomList) {
								/* String roominfo = room.getRoom_no() + "---" + room.getRoom_status(); */
					
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t<option>");
      out.print(room.getRoom_no());
      out.write("</option>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t");

						}
						}
					
      out.write("\r\n");
      out.write("\t\t\t\t</select>\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t<button type=\"submit\" onclick=\"return confirm('book?');\">book</button>\r\n");
      out.write("\t</form>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
